{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link'; // npm install --save isomorphic-unfetch\n\nimport fetch from 'isomorphic-unfetch';\n\nfunction EdbContent(props) {\n  console.warn(\"data\", props.data.data.nodeQuery.entities);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Fetch EDB Tutorials\"));\n}\n\n_c = EdbContent;\nEdbContent.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var token, url, res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTAyMzgzMDUsImV4cCI6MTU5MDI0MTkwNSwiZHJ1cGFsIjp7InVpZCI6IjQ4NDI4MSJ9fQ.rGHj8MAwCyi5ClNwm-dZEDyjZC3itauIsEvT8jEvnJoGeBh_8PCaFV1DnhP572W5TUohjQyCWm4nTX2NM3vw3mAs_M3LX394B3bXmujyNXcwNPXQBtI24nK8Si3OeY9eAhtEo6DOU1G5GMc5Kkpmh_XnIxgs9tM85CPcI0-KiP7BJwFwJYBDZ1p6PO2fj2BN8rmep3CCBRYmwq5oaWYQCUZspQh_-P2uc4giSBQ27i9dTRYXc16I-tz9WKrs95aJBeii83twUcJoqwjRJ2rzKp0rPutjO-fImtWVxfhK6lh5m869KwrF5YwmRN6g5QXe9HMzff1-CXsNcA8qTHc3GA'; //const res = await fetch('https://jsonplaceholder.typicode.com/todos')\n          //const url 'http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1'\n\n          url = 'http://headless.docksal/graphql?queryId=52c6f6b2708176479193e41a5b573fb6152e4821:1';\n          _context.next = 4;\n          return fetch(url, {\n            method: 'get',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: \"Bearer \".concat(token)\n            }\n          });\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return res.json();\n\n        case 7:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default EdbContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EdbContent\");","map":{"version":3,"sources":["/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js"],"names":["Link","fetch","EdbContent","props","console","warn","data","nodeQuery","entities","getInitialProps","token","url","method","headers","Authorization","res","json"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqBF,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC,SAAhB,CAA0BC,QAA/C;AACA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAMH;;KARQN,U;AAWTA,UAAU,CAACO,eAAX,yEAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,KADmB,GACX,gdADW,EAEzB;AACA;;AACMC,UAAAA,GAJmB,GAIb,oFAJa;AAAA;AAAA,iBAKPV,KAAK,CAACU,GAAD,EAAM;AACzBC,YAAAA,MAAM,EAAE,KADiB;AAEzBC,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAELC,cAAAA,aAAa,mBAAYJ,KAAZ;AAFR;AAFgB,WAAN,CALE;;AAAA;AAKnBK,UAAAA,GALmB;AAAA;AAAA,iBAYNA,GAAG,CAACC,IAAJ,EAZM;;AAAA;AAYnBV,UAAAA,IAZmB;AAAA,2CAalB;AACHA,YAAAA,IAAI,EAAJA;AADG,WAbkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAkBA,eAAeJ,UAAf","sourcesContent":["import Link from 'next/link'\n// npm install --save isomorphic-unfetch\nimport fetch from 'isomorphic-unfetch'\n\nfunction EdbContent(props) {\n    console.warn(\"data\", props.data.data.nodeQuery.entities)\n    return (\n        <>\n            <h1>Fetch EDB Tutorials</h1>\n\n        </>\n    )\n}\n\n\nEdbContent.getInitialProps = async function () {\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTAyMzgzMDUsImV4cCI6MTU5MDI0MTkwNSwiZHJ1cGFsIjp7InVpZCI6IjQ4NDI4MSJ9fQ.rGHj8MAwCyi5ClNwm-dZEDyjZC3itauIsEvT8jEvnJoGeBh_8PCaFV1DnhP572W5TUohjQyCWm4nTX2NM3vw3mAs_M3LX394B3bXmujyNXcwNPXQBtI24nK8Si3OeY9eAhtEo6DOU1G5GMc5Kkpmh_XnIxgs9tM85CPcI0-KiP7BJwFwJYBDZ1p6PO2fj2BN8rmep3CCBRYmwq5oaWYQCUZspQh_-P2uc4giSBQ27i9dTRYXc16I-tz9WKrs95aJBeii83twUcJoqwjRJ2rzKp0rPutjO-fImtWVxfhK6lh5m869KwrF5YwmRN6g5QXe9HMzff1-CXsNcA8qTHc3GA'\n    //const res = await fetch('https://jsonplaceholder.typicode.com/todos')\n    //const url 'http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1'\n    const url = 'http://headless.docksal/graphql?queryId=52c6f6b2708176479193e41a5b573fb6152e4821:1'\n    const res = await fetch(url, {\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n        },\n    })\n    const data = await res.json();\n    return {\n        data\n    }\n}\n\nexport default EdbContent\n"]},"metadata":{},"sourceType":"module"}