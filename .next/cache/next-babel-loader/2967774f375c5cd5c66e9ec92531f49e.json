{"ast":null,"code":"var _jsxFileName = \"/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link'; // npm install --save isomorphic-unfetch\n\nimport fetch from 'isomorphic-unfetch';\n\nfunction EdbContent(props) {\n  console.warn(\"data\", props);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Fetch data from API\"), props.data.map(data => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  })));\n} // export async function getStaticProps() {\n//     const res = await fetch('http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1')\n//     const posts = await res.json()\n//\n//     return {\n//         props: {\n//             posts,\n//         },\n//     }\n// }\n// EdbContent.getInitialProps = async ctx => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n// }\n\n\nEdbContent.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await res.json();\n  return {\n    data\n  };\n};\n\nexport default EdbContent; // export default function EdbContent() {\n//     return (\n//         <>\n//             <h1>EDB content</h1>\n//             <h2>\n//                 <Link href=\"/\">\n//                     <a>Back to home</a>\n//                 </Link>\n//             </h2>\n//         </>\n//     )\n// }","map":{"version":3,"sources":["/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js"],"names":["Link","fetch","EdbContent","props","console","warn","data","map","getInitialProps","res","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqBF,KAArB;AACA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAIQA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeD,IAAI,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJR,CADJ;AAgBH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAJ,UAAU,CAACM,eAAX,GAA6B,kBAAkB;AAC3C,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMG,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAO;AACHJ,IAAAA;AADG,GAAP;AAGH,CAND;;AAQA,eAAeJ,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Link from 'next/link'\n// npm install --save isomorphic-unfetch\nimport fetch from 'isomorphic-unfetch'\n\nfunction EdbContent(props) {\n    console.warn(\"data\", props)\n    return (\n        <>\n            <h1>Fetch data from API</h1>\n\n            {\n                props.data.map(data => (\n                    <div>\n                        \n                    </div>\n                ))\n            }\n            {/*<Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>*/}\n                {/*<a>{props.title}</a>*/}\n            {/*</Link>*/}\n        </>\n    )\n}\n\n// export async function getStaticProps() {\n//     const res = await fetch('http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1')\n//     const posts = await res.json()\n//\n//     return {\n//         props: {\n//             posts,\n//         },\n//     }\n// }\n\n// EdbContent.getInitialProps = async ctx => {\n//     const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n// }\n\nEdbContent.getInitialProps = async function () {\n    const res = await fetch('https://jsonplaceholder.typicode.com/todos')\n    const data = await res.json();\n    return {\n        data\n    }\n}\n\nexport default EdbContent\n\n// export default function EdbContent() {\n//     return (\n//         <>\n//             <h1>EDB content</h1>\n//             <h2>\n//                 <Link href=\"/\">\n//                     <a>Back to home</a>\n//                 </Link>\n//             </h2>\n//         </>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}