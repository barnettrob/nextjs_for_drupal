{"ast":null,"code":"var _jsxFileName = \"/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link'; // npm install --save isomorphic-unfetch\n\nimport fetch from 'isomorphic-unfetch';\n\nfunction EdbContent(props) {\n  console.warn(\"data\", props.data.data.nodeQuery.entities);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Fetch EDB Tutorials\"), props.data.data.nodeQuery.entities.map(data => __jsx(\"div\", {\n    key: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    as: '',\n    href: `#`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }, data.entityLabel)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, data.fieldAuthoredByRef.entity.entityLabel), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, data.body.summary), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }))));\n}\n\nEdbContent.getInitialProps = async function () {\n  const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTAyMzgzMDUsImV4cCI6MTU5MDI0MTkwNSwiZHJ1cGFsIjp7InVpZCI6IjQ4NDI4MSJ9fQ.rGHj8MAwCyi5ClNwm-dZEDyjZC3itauIsEvT8jEvnJoGeBh_8PCaFV1DnhP572W5TUohjQyCWm4nTX2NM3vw3mAs_M3LX394B3bXmujyNXcwNPXQBtI24nK8Si3OeY9eAhtEo6DOU1G5GMc5Kkpmh_XnIxgs9tM85CPcI0-KiP7BJwFwJYBDZ1p6PO2fj2BN8rmep3CCBRYmwq5oaWYQCUZspQh_-P2uc4giSBQ27i9dTRYXc16I-tz9WKrs95aJBeii83twUcJoqwjRJ2rzKp0rPutjO-fImtWVxfhK6lh5m869KwrF5YwmRN6g5QXe9HMzff1-CXsNcA8qTHc3GA'; //const res = await fetch('https://jsonplaceholder.typicode.com/todos')\n  //const url 'http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1'\n\n  const url = 'http://headless.docksal/graphql?queryId=52c6f6b2708176479193e41a5b573fb6152e4821:1';\n  const res = await fetch(url, {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await res.json();\n  return {\n    data\n  };\n};\n\nexport default EdbContent;","map":{"version":3,"sources":["/Users/robert.barnett/Sites/next-edb/pages/posts/edb-content.js"],"names":["Link","fetch","EdbContent","props","console","warn","data","nodeQuery","entities","map","entityLabel","fieldAuthoredByRef","entity","body","summary","getInitialProps","token","url","res","method","headers","Authorization","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqBF,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC,SAAhB,CAA0BC,QAA/C;AACA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAGQL,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC,SAAhB,CAA0BC,QAA1B,CAAmCC,GAAnC,CAAuCH,IAAI,IACvC;AAAK,IAAA,GAAG,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,IAAI,EAAG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACI,WAAT,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAI,CAACK,kBAAL,CAAwBC,MAAxB,CAA+BF,WAArC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAI,CAACO,IAAL,CAAUC,OAAhB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CAHR,CADJ;AAiBH;;AAGDZ,UAAU,CAACa,eAAX,GAA6B,kBAAkB;AAC3C,QAAMC,KAAK,GAAG,gdAAd,CAD2C,CAE3C;AACA;;AACA,QAAMC,GAAG,GAAG,oFAAZ;AACA,QAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACgB,GAAD,EAAM;AACzBE,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAF1B;AAFgB,GAAN,CAAvB;AAOA,QAAMV,IAAI,GAAG,MAAMY,GAAG,CAACI,IAAJ,EAAnB;AACA,SAAO;AACHhB,IAAAA;AADG,GAAP;AAGH,CAhBD;;AAkBA,eAAeJ,UAAf","sourcesContent":["import Link from 'next/link'\n// npm install --save isomorphic-unfetch\nimport fetch from 'isomorphic-unfetch'\n\nfunction EdbContent(props) {\n    console.warn(\"data\", props.data.data.nodeQuery.entities)\n    return (\n        <>\n            <h1>Fetch EDB Tutorials</h1>\n            {\n                props.data.data.nodeQuery.entities.map(data => (\n                    <div key=''>\n                        <Link as={''} href={`#`}>\n                            <a>{data.entityLabel}</a>\n                        </Link>\n                        <div>{data.fieldAuthoredByRef.entity.entityLabel}</div>\n                        <div>{data.body.summary}</div>\n                        <br />\n                    </div>\n                ))\n            }\n        </>\n    )\n}\n\n\nEdbContent.getInitialProps = async function () {\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTAyMzgzMDUsImV4cCI6MTU5MDI0MTkwNSwiZHJ1cGFsIjp7InVpZCI6IjQ4NDI4MSJ9fQ.rGHj8MAwCyi5ClNwm-dZEDyjZC3itauIsEvT8jEvnJoGeBh_8PCaFV1DnhP572W5TUohjQyCWm4nTX2NM3vw3mAs_M3LX394B3bXmujyNXcwNPXQBtI24nK8Si3OeY9eAhtEo6DOU1G5GMc5Kkpmh_XnIxgs9tM85CPcI0-KiP7BJwFwJYBDZ1p6PO2fj2BN8rmep3CCBRYmwq5oaWYQCUZspQh_-P2uc4giSBQ27i9dTRYXc16I-tz9WKrs95aJBeii83twUcJoqwjRJ2rzKp0rPutjO-fImtWVxfhK6lh5m869KwrF5YwmRN6g5QXe9HMzff1-CXsNcA8qTHc3GA'\n    //const res = await fetch('https://jsonplaceholder.typicode.com/todos')\n    //const url 'http://uxteam:neo2020@redesign.docksal/jsonapi/node/tutorials_?page[limit]=10&filter[status][value]=1'\n    const url = 'http://headless.docksal/graphql?queryId=52c6f6b2708176479193e41a5b573fb6152e4821:1'\n    const res = await fetch(url, {\n        method: 'get',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n        },\n    })\n    const data = await res.json();\n    return {\n        data\n    }\n}\n\nexport default EdbContent\n"]},"metadata":{},"sourceType":"module"}